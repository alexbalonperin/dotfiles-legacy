--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: Reverse geocodes a LatLng object using the MultiGeocoder (default), or optionally using a geocoder of your choosing. Returns a new Geokit::GeoLoc object
- !ruby/struct:SM::Flow::H 
  level: 4
  text: Options
- !ruby/object:SM::Flow::LIST 
  contents: 
  - !ruby/struct:SM::Flow::LI 
    label: "*"
    body: ":using - Specifies the geocoder to use for reverse geocoding. Defaults to"
  - !ruby/struct:SM::Flow::VERB 
    body: "          MultiGeocoder. Can be either the geocoder class (or any class that\n          implements do_reverse_geocode for that matter), or the name of\n          the class without the &quot;Geocoder&quot; part (e.g. :google)\n"
  type: :BULLET
- !ruby/struct:SM::Flow::H 
  level: 4
  text: Examples
- !ruby/struct:SM::Flow::P 
  body: "LatLng.new(51.4578329, 7.0166848).reverse_geocode # =&gt; #&lt;Geokit::GeoLoc:0x12dac20 @state...&gt; LatLng.new(51.4578329, 7.0166848).reverse_geocode(:using =&gt; :google) # =&gt; #&lt;Geokit::GeoLoc:0x12dac20 @state...&gt; LatLng.new(51.4578329, 7.0166848).reverse_geocode(:using =&gt; Geokit::Geocoders::GoogleGeocoder) # =&gt; #&lt;Geokit::GeoLoc:0x12dac20 @state...&gt;"
full_name: Geokit::LatLng#reverse_geocode
is_singleton: false
name: reverse_geocode
params: (options = { :using => Geokit::Geocoders::MultiGeocoder })
visibility: public
