--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: "Returns a minimized version of this object, that is successive elements are substituted with ranges a..b. In the situation ..., x, y,... and y != x.succ a range x..x is created, to make it easier to iterate over all the ranges in one run. A small example:"
- !ruby/struct:SM::Flow::VERB 
  body: " [ 'A', 'B', 'C', 'G', 'K', 'L', 'M' ].minimize # =&gt; [ 'A'..'C', 'G'..'G', 'K'..'M' ]\n"
- !ruby/struct:SM::Flow::P 
  body: "If the order of the original elements doesn't matter, it's a good idea to first sort them and then minimize:"
- !ruby/struct:SM::Flow::VERB 
  body: " [ 5, 1, 4, 2 ].sort.minimize # =&gt; [ 1..2, 4..5 ]\n"
full_name: Tins::Minimize#minimize
is_singleton: false
name: minimize
params: ()
visibility: public
