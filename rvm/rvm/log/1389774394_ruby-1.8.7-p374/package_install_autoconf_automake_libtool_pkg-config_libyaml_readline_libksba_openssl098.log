[2014-01-15 17:26:50] requirements_osx_brew_libs_install
requirements_osx_brew_libs_install () 
{ 
    brew unlink "$@" || true;
    brew install "$@" || { 
        typeset ret=$?;
        rvm_warn "There were package installation errors, make sure to read the log.

Try \`brew tap --repair\` and make sure \`brew doctor\` looks reasonable.

Check Homebrew requirements https://github.com/mxcl/homebrew/wiki/Installation";
        case "$_system_version" in 
            10.6)
                rvm_warn "
On OSX 10.6 instead of command line tools install:
    https://github.com/downloads/kennethreitz/osx-gcc-installer/GCC-10.6.pkg"
            ;;
        esac;
        return $ret
    }
}
current path: /Users/abalonperin
PATH=/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/Users/abalonperin/.rvm/bin
command(9): requirements_osx_brew_libs_install autoconf automake libtool pkg-config libyaml readline libksba openssl098
Error: No such keg: /usr/local/Cellar/autoconf
==> Downloading https://downloads.sf.net/project/machomebrew/Bottles/autoconf-2.69.mavericks.bottle.tar.gz
==> Pouring autoconf-2.69.mavericks.bottle.tar.gz
🍺  /usr/local/Cellar/autoconf/2.69: 69 files, 2.0M
==> Downloading https://downloads.sf.net/project/machomebrew/Bottles/automake-1.14.1.mavericks.bottle.tar.gz
==> Pouring automake-1.14.1.mavericks.bottle.tar.gz
🍺  /usr/local/Cellar/automake/1.14.1: 127 files, 2.5M
==> Downloading https://downloads.sf.net/project/machomebrew/Bottles/libtool-2.4.2.mavericks.bottle.2.tar.gz
==> Pouring libtool-2.4.2.mavericks.bottle.2.tar.gz
==> Caveats
In order to prevent conflicts with Apple's own libtool we have prepended a "g"
so, you have instead: glibtool and glibtoolize.
==> Summary
🍺  /usr/local/Cellar/libtool/2.4.2: 66 files, 2.2M
==> Downloading https://downloads.sf.net/project/machomebrew/Bottles/pkg-config-0.28.mavericks.bottle.2.tar.gz
==> Pouring pkg-config-0.28.mavericks.bottle.2.tar.gz
🍺  /usr/local/Cellar/pkg-config/0.28: 10 files, 604K
==> Downloading http://pyyaml.org/download/libyaml/yaml-0.1.4.tar.gz
==> ./configure --prefix=/usr/local/Cellar/libyaml/0.1.4
==> make install
🍺  /usr/local/Cellar/libyaml/0.1.4: 7 files, 332K, built in 12 seconds
==> Downloading https://downloads.sf.net/project/machomebrew/Bottles/readline-6.2.4.mavericks.bottle.2.tar.gz
==> Pouring readline-6.2.4.mavericks.bottle.2.tar.gz
==> Caveats
This formula is keg-only, so it was not symlinked into /usr/local.

OS X provides the BSD libedit library, which shadows libreadline.
In order to prevent conflicts when programs look for libreadline we are
defaulting this GNU Readline installation to keg-only.

Generally there are no consequences of this for you. If you build your
own software and it requires this formula, you'll need to add to your
build variables:

    LDFLAGS:  -L/usr/local/opt/readline/lib
    CPPFLAGS: -I/usr/local/opt/readline/include

==> Summary
🍺  /usr/local/Cellar/readline/6.2.4: 31 files, 1.6M
==> Installing libksba dependency: libgpg-error
==> Downloading ftp://ftp.gnupg.org/gcrypt/libgpg-error/libgpg-error-1.12.tar.bz2
==> ./configure --prefix=/usr/local/Cellar/libgpg-error/1.12
==> make install
🍺  /usr/local/Cellar/libgpg-error/1.12: 15 files, 172K, built in 15 seconds
==> Installing libksba
==> Downloading ftp://ftp.gnupg.org/gcrypt/libksba/libksba-1.3.0.tar.bz2
==> ./configure --prefix=/usr/local/Cellar/libksba/1.3.0
==> make install
🍺  /usr/local/Cellar/libksba/1.3.0: 11 files, 272K, built in 16 seconds
==> Downloading http://www.openssl.org/source/openssl-0.9.8y.tar.gz
==> perl ./Configure --prefix=/usr/local/Cellar/openssl098/0.9.8y --openssldir=/usr/local/etc/openssl zlib-dynamic shared darwin64-x86_64-cc enable-ec_nistp_64_gcc_128
==> make
==> make test
==> make install MANDIR=/usr/local/Cellar/openssl098/0.9.8y/share/man MANSUFFIX=ssl
==> Caveats
Note that the libraries built tend to be 32-bit only, even on Snow Leopard.

This formula is keg-only, so it was not symlinked into /usr/local.

Mac OS X already provides this software and installing another version in
parallel can cause all kinds of trouble.

Generally there are no consequences of this for you. If you build your
own software and it requires this formula, you'll need to add to your
build variables:

    LDFLAGS:  -L/usr/local/opt/openssl098/lib
    CPPFLAGS: -I/usr/local/opt/openssl098/include

==> Summary
🍺  /usr/local/Cellar/openssl098/0.9.8y: 366 files, 12M, built in 101 seconds
